// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Shelton Zhu",
            "url": "https://github.com/SheltonZhu",
            "email": "shelton@icloud.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/app/docker/{containerId}/restart": {
            "post": {
                "description": "重启容器",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "容器操作"
                ],
                "summary": "Docker 重启容器接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "容器id",
                        "name": "containerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/v1/app/docker/{containerId}/stop": {
            "post": {
                "description": "停止容器",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "容器操作"
                ],
                "summary": "Docker 停止容器接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "容器id",
                        "name": "containerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/v1/app/dockers": {
            "get": {
                "description": "查询容器列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "容器操作"
                ],
                "summary": "Docker 容器列表接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "是否查询全部容器",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "是否容器显示大小",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "是否仅显示最新创建容器",
                        "name": "latest",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "是否只显示容器id",
                        "name": "quiet",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "显示数量",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "192.168.60.23:4399",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "容器管理",
	Description: "Docker 容器管理",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
